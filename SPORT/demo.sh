#!/bin/bash

# AI Sports Analyzer Demo Script
# This script demonstrates the complete system functionality

echo "🏆 AI Sports Analyzer - Complete System Demo"
echo "============================================"

echo ""
echo "📁 System Structure:"
echo "SPORT/"
echo "├── backend/           # FastAPI backend services"
echo "│   ├── app/          # Main application"
echo "│   ├── models/       # ML models and training" 
echo "│   ├── database/     # Database schemas and operations"
echo "│   └── api/          # API endpoints"
echo "├── frontend/         # React frontend"
echo "│   ├── src/          # Source code"
echo "│   └── public/       # Static assets"
echo "└── docker/           # Docker configuration"

echo ""
echo "🚀 Quick Start Options:"
echo ""
echo "Option 1 - Docker (Recommended):"
echo "  cd SPORT"
echo "  docker-compose up -d"
echo "  # Frontend: http://localhost:3000"
echo "  # Backend: http://localhost:8000"

echo ""
echo "Option 2 - Manual Setup:"
echo "  # Backend"
echo "  cd SPORT/backend"
echo "  pip install -r requirements.txt"
echo "  python app/main.py"
echo ""
echo "  # Frontend (in new terminal)"
echo "  cd SPORT/frontend"
echo "  npm install"
echo "  npm start"

echo ""
echo "🧪 Testing & Validation:"
echo ""
echo "✅ Backend API Structure - Validated"
echo "✅ Database Models - Complete (5 tables)"
echo "✅ SportDB API Client - Implemented"
echo "✅ ML Prediction Engine - Ready"
echo "✅ React Frontend - 4 pages implemented"
echo "✅ Docker Configuration - Ready"
echo "✅ Sample Data - Generated (20 teams, 100 players, 100 matches)"

echo ""
echo "📊 Key Features:"
echo ""
echo "🏠 Homepage:"
echo "   - System status dashboard"
echo "   - Statistics overview"
echo "   - Quick actions for data sync and model training"

echo ""
echo "🔍 Search Page:"
echo "   - Search teams, players, matches"
echo "   - Detailed team information with statistics"
echo "   - Filter by league and other criteria"

echo ""
echo "📈 Evaluation Page:"
echo "   - Team performance analysis"
echo "   - Win rates and historical statistics"
echo "   - Interactive team selection"

echo ""
echo "🎯 Prediction Page:"
echo "   - AI-powered match predictions"
echo "   - Confidence scores and probability breakdowns"
echo "   - Prediction history and accuracy tracking"

echo ""
echo "🌐 API Endpoints:"
echo ""
echo "Data Management:"
echo "  GET  /api/data/teams           # Get teams"
echo "  GET  /api/data/players         # Get players"
echo "  GET  /api/data/matches         # Get matches"
echo "  GET  /api/data/search          # Search all"
echo "  GET  /api/data/sync            # Sync from SportDB"

echo ""
echo "AI Predictions:"
echo "  POST /api/predictions/predict  # Make prediction"
echo "  GET  /api/predictions/accuracy # Get model accuracy"
echo "  GET  /api/predictions/history  # Prediction history"

echo ""
echo "Model Training:"
echo "  POST /api/training/train       # Train model"
echo "  GET  /api/training/status      # Training status"
echo "  POST /api/training/retrain     # Retrain model"

echo ""
echo "🤖 Machine Learning Pipeline:"
echo ""
echo "1. Feature Engineering:"
echo "   - Team form (recent 10 matches)"
echo "   - Goal statistics (for/against)"
echo "   - Home/away performance"
echo "   - Win rates and point totals"

echo ""
echo "2. Model Training:"
echo "   - Algorithm: Random Forest Classifier"
echo "   - Features: 15+ statistical indicators"
echo "   - Target: Match outcome (home_win/draw/away_win)"
echo "   - Evaluation: Accuracy, Precision, Recall, F1-score"

echo ""
echo "3. Prediction Process:"
echo "   - Extract features for upcoming matches"
echo "   - Generate probability predictions"
echo "   - Calculate confidence scores"
echo "   - Store predictions for accuracy tracking"

echo ""
echo "📦 Sample Usage:"
echo ""
echo "# 1. Start the system"
echo "docker-compose up -d"
echo ""
echo "# 2. Sync data (background task)"
echo "curl -X GET 'http://localhost:8000/api/data/sync'"
echo ""
echo "# 3. Train ML model (background task)"
echo "curl -X POST 'http://localhost:8000/api/training/train'"
echo ""
echo "# 4. Make a prediction"
echo "curl -X POST 'http://localhost:8000/api/predictions/predict' \\"
echo "  -H 'Content-Type: application/json' \\"
echo "  -d '{\"home_team_id\": 1, \"away_team_id\": 2}'"
echo ""
echo "# 5. Check prediction accuracy"
echo "curl -X GET 'http://localhost:8000/api/predictions/accuracy'"

echo ""
echo "🛠️ Development & Testing:"
echo ""
echo "Backend Testing:"
echo "  cd SPORT/backend"
echo "  python test_structure.py      # Validate API structure"
echo "  python test_sportdb_api.py    # Test SportDB integration"
echo "  python generate_sample_data.py # Generate test data"

echo ""
echo "Frontend Testing:"
echo "  cd SPORT/frontend"
echo "  npm test                      # Run React tests"

echo ""
echo "🎉 The AI Sports Analyzer system is ready!"
echo ""
echo "📚 For detailed setup instructions, see:"
echo "   - SPORT/README.md"
echo "   - SPORT/SETUP_GUIDE.md"
echo ""
echo "🌟 System provides:"
echo "   ✅ Complete sports data management"
echo "   ✅ AI-powered match predictions"
echo "   ✅ Professional web interface"
echo "   ✅ Scalable architecture"
echo "   ✅ Production-ready deployment"